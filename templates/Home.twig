{% extends "@Tsugi/Page.twig" %}

{% block head %}
    {% for style in styles %}
        <link rel="stylesheet" type="text/css" href="{{style}}"/>
    {% endfor %}
{% endblock %}

{% block content %}
    <div>
        <div id="header">
            <div class="row">
                <div class="col-sm-6">
                    <h4>Vula Files UI</h4>
                </div>
                <div class="col-sm-6 text-right">
                    <h3><button type="button" class="btn btn-default scheduler btn-sm" id="uploadFile" data-toggle='modal' data-target='#uploadModal'><i class="fa fa-upload"></i> Upload</button></h3>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <form method="post" id="searchForm">
                        <div class="form-group form-inline">
                            <small>
                                <strong>NOTE: </strong> Search by file name / date created / expiry date / url / submitter
                            </small>
                            <div>
                                <label>Search:</label>
                                <input type="text" class="form-control xsmall" id="searchInput" placeholder="Enter search string"/>
                                <button type="submit" class="btn btn-default" id="searchBtn"><i class="fa fa-search"></i></button>
                                <button type="reset" value="Reset" onClick="window.location.reload()"><i class="fa fa-refresh xsmall"></i></button>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="col-sm-6 text-right">
                    <p></p>
                    <div id="filterContainer">
                        <div class="justify-content-right" id="statusFilterBtnContainer"></div>
                        <div class="justify-content-center p-3" id="catFilterBtnContainer"></div>
                    </div>
                </div>
            </div>
        </div>
        <div>
        <table id="table-info" class="table table-hover table-condensed table-bordered table-striped" data-total="" data-limit="">
                <thead id="table-info-header">
                    <th class="sortable"><i class="arrow"></i> Category</th>
                    <th class="text-center">Thumbnail</th>
                    <th class="sortable"><i class="arrow"></i> Expires</th>
                    <th class="sortable text-center"><i class="arrow"></i> URL</th>
                    <th class="sortable"><i class="arrow"></i> Created</th>
                    <th class="sortable"><i class="arrow"></i> Status</th>
                    <th class="sortable"><i class="arrow"></i> Submitter</th>
                    <th class="text-center">Actions</th>
                </thead>
                <tbody id="table-info-body">
                    <tr>
                        <td colspan="8">Loading files ...</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div id="pagination-container">
           <div class="row">
                <div class="col-sm-6">
                    <div id="pageCounter" style='padding: 10px 20px 0px; border-top: dotted 1px #CCC;'>
            
                    </div>
                </div>
                <div class="col-sm-6">
                    <ul class="pagination" id="paginationSection">
                    
                    </ul>
                </div>
            </div>
        </div>
        <div id="imageModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                <img src="" />
                </div>
            </div>
        </div>
        <div id="deleteModal" class="modal fade" role="dialog">
            <div class="modal-dialog" role="document">
                <form class="modal-content" method="post">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4></h4>
                </div>
                <div class="modal-body">
                    <p class="text-center">Are you sure you want to delete this file?</p>
                     <input type="hidden" id="file_name" name="file_name" data-expires="" data-today=""/>
                    <table class="table borderless">
                        <tr>
                            <td><label>Notes:</label></td>
                            <td><textarea id="file_comments" name="file_comments" class="w3-input w3-border form-control" rows="5"></textarea></td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                        <button type="reset" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button class="btn btn-success" id="deleteFileBtn">Yes</button>
                </div>
                </form>
            </div>
        </div>
        </div>
        <div id="uploadModal" class="modal fade" role="dialog">
            <div class="modal-dialog" role="document">
                <form class="modal-content" method="post">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Upload a file</h4>
                    </div>
                    <div class="modal-body">
                        <p><small> All fields marked with <span style="color:red">*</span> are compulsory</small></p>
                        <table class="table borderless">
                            <tr>
                                <td> <span style="color:red">*</span> <label>JIRA Issue</label></td>
                                <td><input type="text" id="jira_issue" name="jira_issue" class="form-control" required placeholder="e.g. VULAHELP-1234"/></td>
                            </tr>
                            <tr>
                                <td>  <span style="color:red">*</span> <label>Category</label></td>
                                <td>
                                    <select class="form-control" id="file_category" name="file_category" required="true">
                                    <option selected disabled>Select from list</option>
                                    <option>events</option>
                                    <option>src</option>
                                    <option>cet</option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td>  <span style="color:red">*</span> <label>File</label></td>
                                <td>
                                    <input type="file" class="form-control-file" id="_img" name="_img" accept="image/*" onchange="encodeImgtoBase64(this)">
                                    <input type="hidden" id="convertedImg" name="convertedImg" value="" required/>
                                </td>
                            </tr>
                            <tr>
                                <td> <span style="color:red">*</span> <label>Expires</label></td>
                                <td><input type="date" id="file_expiry" name="file_expiry" class="form-control" value="<?php echo date('Y-m-d'); ?>" required/></td>
                            </tr>
                            <tr>
                                <td><span style="color:white">*</span> <label>URL</label></td>
                                <td><input type="url" id="file_url" name="file_url" class="form-control"/></td>
                            </tr>
                            <tr>
                                <td><span style="color:white">*</span> <label>Comments</label></td>
                                <td><textarea id="file_comments" name="file_comments" class="form-control" rows="5"></textarea></td>
                            </tr>
                        </table>            
                    </div>
                   <div class="modal-footer">
                        <button type="reset" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button class="btn btn-success" id="uploadFileBtn">Save</button>
                    </div>
                </form>
            </div>
        </div>
        <div id="editModal" class="modal fade" role="dialog">
            <div class="modal-dialog" role="document">
                <form class="modal-content" method="post">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title"></h4>
                    </div>
                    
                    <div class="modal-body">
                        <table class="table borderless">
                            <tr>
                                <td><label>Submitter:</label></td>
                                <td><input type="text" class="form-control" id="file_submitter" name="file_submitter" disabled></td>
                            </tr>
                             <tr>
                                <td><label>Email:</label></td>
                                <td><input type="text" class="form-control" id="submitter_email" name="submitter_email" disabled></td>
                            </tr>
                            <tr>
                                <td> <span style="color:red"></span> <label>JIRA URL</label></td>
                                <td><input type="url" id="jira_issue" name="jira_issue" class="form-control" disabled/></td>
                            </tr>
                            <tr>
                                <td><label>Category:</label></td>
                                <td>
                                    <select class="w3-input w3-border form-control" id="file_category" name="file_category">
                                    <option>events</option>
                                    <option>src</option>
                                    <option>cet</option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td><label>File name:</label></td>
                                <td><input type="text" id="file_name" name="file_name" class="w3-input w3-border form-control" disabled/></td>
                            </tr>
                            <tr>
                                <td><label>Expiry date:</label></td>
                                <td><input type="date" id="file_expiry" name="file_expiry" class="w3-input w3-border form-control"/></td>
                            </tr>
                            <tr>
                                <td><label>File URL:</label></td>
                                <td><input type="text" id="file_url" name="file_url" class="w3-input w3-border form-control"/></td>
                            </tr>
                            <tr>
                                <td><label>Comments:</label></td>
                                <td><textarea id="file_comments" name="file_comments" class="w3-input w3-border form-control" rows="5"></textarea></td>
                            </tr>
                            <tr>
                                <td><label>Change status:</label></td>
                                <td><input type="radio" id="mark_active" name="fileStatus"/> <label for="mark_active" id="mark_status"></label>&nbsp;&nbsp;&nbsp;
                                <input type="radio" id="mark_archive" name="fileStatus" value="Archive"/> <label for="mark_archive">Archive</label> </td>
                            </tr>
                        </table>            
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success" id="editFileBtn">Save</button>
                    </div>
                </form>
            </div>
        </div>
        <div id="responseModal" class="modal fade" role="dialog">
            <div class="modal-dialog" role="document">
               
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title"></h4>
                    </div>
                    <div class="modal-body">
                        <p class="" id="responseText" name="responseText"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
             
            </div>
        </div>
    </div>
{% endblock %}

{% block footer %}
    {% for script in scripts %}
        <script src="{{script}}" type="text/javascript"></script>
    {% endfor %}
    <script>
        var data = [];
        $(function() {

            var dtToday = new Date(),
                month = dtToday.getMonth() + 1,
                day = dtToday.getDate(),
                year = dtToday.getFullYear(),
                json = [],
                page_no = 1,
                limitPerPage = 20,
                filtered_total = 0,
                active_records = 0,
                inactive_records = 0,
                total_records = 0,
                active_pages = 0;
                total_pages = 0;


            $.postJSON = function(url,data){
                return $.ajax({url:url,data:JSON.stringify(data),type:'POST', contentType:'application/json'});
            };

            encodeImgtoBase64 = function(element){
                var _file = element.files[0];
                var _URL = window.URL || window.webkitURL;
                if (_file = element.files[0]) {
                    img = new Image();
                    img.onload = function() {
                         $("#uploadModal #convertedImg").attr('data-dimensions',  this.width + 'x' + this.height);
                    };
                    img.src = _URL.createObjectURL(_file);

                    var reader = new FileReader();
                    reader.onloadend = function() {
                        $("#uploadModal #convertedImg").val(reader.result);
                    }
                    reader.readAsDataURL(_file);
                }
            }

            getFilterCounts = function(filterDetails) {
                $.postJSON('{{ getStatusCounts }}', filterDetails) 
                .done(function (_data) {
                    const counts_list = _data;
                    console.log(counts_list);
                    const counts = { active: 0, inactive: 0, events: 0, cet: 0, src: 0, active_status: 'active', active_category: 'all' };

                    $.each(counts_list, function(i,el) {
                        counts.total_records = el.total_count;
                        counts.active_records = el.active_count;
                        counts.inactive_records = el.inactive_count;
                        counts.total_events = el.events_count;
                        counts.total_cet = el.cet_count;
                        counts.total_src = el.src_count;
                    });

                    $('#statusFilterBtnContainer').html(tmpl('tmpl-filter-status', counts));
                    $('#catFilterBtnContainer').html(tmpl('tmpl-filter-category', counts));  

                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.log ("error:" + errorThrown.message);
                    console.log ("error:" + textStatus);
                    console.log ("error:" + jqXHR);
                });
            }

            getPagination = function(paginateInfo) {
                $.postJSON( '{{ getPagination}}', paginateInfo) 
                .done(function (response) {
                    const list = response;
                    console.log(response);
                    $('#paginationSection').html(response);

                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.log ("error:" + errorThrown.message);
                    console.log ("error:" + textStatus);
                    console.log ("error:" + jqXHR);
                });
            }

            getFilteredData = function(filter_info) {
                $.postJSON( '{{ getFilteredData }}', filter_info) 
                .done(function (response) {
                    const list = response;
                    data = list;
                   
                    const counts = { active: 0, inactive: 0, archive: 0, events: 0, cet: 0, src: 0, active_status: filter_info.active_status, active_category: filter_info.active_category };
                    console.log(list);

                    $.each(list, function(i,el) {
                       
                        if(el['fileStatus'] == 'Archive') {
                            el.status = 'archive';  
                        } else  if (new Date(el['expires'] +' 23:59:59') <= new Date()) {
                            el.status = 'inactive';
                        } else {
                            el.status = 'active';
                        }
            
                        filtered_total = el.total_records;
                        counts.total_records = el.total_records;
                        counts.active_records = el.total_active;
                        counts.inactive_records = el.total_inactive;
                        counts.archive_records = el.total_archive;
                        counts.total_events = el.active_events;
                        counts.total_cet = el.active_cet;
                        counts.total_src = el.active_src;
                        filtered_total = el.total_records;
                        console.log(filtered_total);
                        totalPages = Math.ceil(filtered_total / limitPerPage);
                        console.log(totalPages);

                        if(el['status'] == 'all') {
                            counts.total_events = el.all_events;
                            counts.total_cet = el.all_cet;
                            counts.total_src = el.all_src;
                            counts.total_all = el.all_all;
                            filtered_total = el.total_records;
                            totalPages = Math.ceil(filtered_total / limitPerPage);
                        } else {

                            if(el['status'] == 'active') {
                                counts.total_events = el.active_events;
                                counts.total_cet = el.active_cet;
                                counts.total_src = el.active_src;
                                //filtered_total = el.total_active;
                                totalPages = Math.ceil(el.total_active / limitPerPage);
                                if(filter_info.active_category == 'all') {
                                    filtered_total = el.total_active;
                                } else if(filter_info.active_category == 'events') {
                                    filtered_total = el.active_events;
                                } else if(filter_info.active_category == 'cet') {
                                    filtered_total = el.active_cet;
                                } else if(filter_info.active_category == 'src') {
                                    filtered_total = el.active_src;
                                } 
                                console.log(filtered_total);
                            } else if(el['status'] == 'inactive') {
                                counts.total_events = el.inactive_events;
                                counts.total_cet = el.inactive_cet;
                                counts.total_src = el.inactive_src;
                                filtered_total = el.total_inactive;
                                totalPages = Math.ceil( el.total_inactive / limitPerPage);
                                if(filter_info.active_category == 'events') {
                                    filtered_total = el.inactive_events;
                                } else if(filter_info.active_category == 'cet') {
                                    filtered_total = el.inactive_cet;
                                } else if(filter_info.active_category == 'src') {
                                    filtered_total = el.inactive_src;
                                } else if(filter_info.active_category == 'all') {
                                    filtered_total = el.total_inactive;
                                }
                            } else  {
                                counts.total_events = el.archive_events;
                                counts.total_cet = el.archive_cet;
                                counts.total_src = el.archive_src;
                                filtered_total = el.total_archive;
                                totalPages = Math.ceil(el.total_archive / limitPerPage);
                                if(filter_info.active_category == 'events') {
                                    filtered_total = el.archive_events;
                                } else if(filter_info.active_category == 'cet') {
                                    filtered_total = el.archive_cet;
                                } else if(filter_info.active_category == 'src') {
                                    filtered_total = el.archive_src;
                                } else if(filter_info.active_category == 'all') {
                                    filtered_total = el.total_archive;
                                }
                            }
                        }
                    });

                    var paginateInfo = {
                        "pageno" : page_no,
                        "total_pages" : totalPages 
                    };
                    json.push(paginateInfo);
                   
                    $('#table-info').attr('data-limit', limitPerPage);
                    $('#table-info').attr('data-total', filtered_total);
                    $('#statusFilterBtnContainer').html(tmpl('tmpl-filter-status', counts));
                    $('#catFilterBtnContainer').html(tmpl('tmpl-filter-category', counts));  
                    $('#table-info-body').html(tmpl('tmpl-table', list));
                    filterTable();
                
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.log ("error:" + errorThrown.message);
                    console.log ("error:" + textStatus);
                    console.log ("error:" + jqXHR);
                });
            }
            
            
             var filterDetails = {
                "active_status" : "active",
                "active_category" : "all" 
            };
            json.push(filterDetails);

            getFilteredData(filterDetails);

            $('#searchInput').on('keyup', function(event) {
                if(this.value.length >= 3) {       
                    var _searchValue = $(this).val().toLowerCase();
                    var filterDetails = {
                        "searchField" : _searchValue
                    }
                    json.push(filterDetails);

                    getFilteredData(filterDetails);
                }
            });

            $('#searchForm').on('submit', function(event) {
                var _searchValue = $('#searchInput').val().toLowerCase();
                var filterDetails = {
                    "searchField" : _searchValue
                }
                json.push(filterDetails);

                getFilteredData(filterDetails);        
            });

            $('#filterContainer').on('click', '#statusFilterBtnContainer a', function(event){
                $('#statusFilterBtnContainer a').removeClass('active');
                $(this).addClass('active');
                $('#catFilterBtnContainer a').removeClass('active');
                $('#catFilterBtnContainer #all').addClass('active');
               
                const _status = $('#statusFilterBtnContainer a.active').attr('rel'),
                      _category = $('#catFilterBtnContainer a.active').attr('rel');

                var filterInfo = {
                    "active_status" : _status,
                    "active_category" : _category 
                };
                json.push(filterInfo);

                getFilteredData(filterInfo);   
            });

            $('#filterContainer').on('click', '#catFilterBtnContainer a', function(event){
                $('#catFilterBtnContainer a').removeClass('active');
                $(this).addClass('active');
                
                const _status = $('#statusFilterBtnContainer a.active').attr('rel'),
                      _category = $('#catFilterBtnContainer a.active').attr('rel');

                var filterInfo = {
                    "active_status" : _status,
                    "active_category" : _category 
                };
                json.push(filterDetails);

                getFilteredData(filterInfo);
            });

            $('#editModal').on('submit', 'form', function (e) {
                var _changes = getInputs(this);
                var json = [];
                var marked_status = "";

                if($("[name='fileStatus']:checked").val() == 'Archive') {
                    marked_status = 'Archive';
                }

                if(_changes) {
                    var fileDetails = {
                        "filename" : _changes.file_name,
                        "category" : _changes.file_category,
                        "expiry" : _changes.file_expiry,
                        "submitter" : _changes.file_submitter,
                        "url" : _changes.file_url,
                        "status" : marked_status,
                        "comments" : _changes.file_comments
                    };
                    json.push(fileDetails);
                }

                $.postJSON( '{{ editFile}}', fileDetails)
                .fail(function(err) {
                   console.log ("error:" + error.message);
                });
            });

            $('#uploadModal').on('submit', 'form', function (e) {
                var _changes = getInputs(this);
                var json = [];
                var filename = $('#uploadModal #_img').val().split('\\').pop();
                var fileToUpload = $(' #uploadModal #_img').prop('files')[0];
                var imgBase64 = $('#uploadModal #convertedImg').val();
                var imgDimensions = $('#uploadModal #convertedImg').attr('data-dimensions');
                var fileSubmitter = _changes.file_submitter + "<" + _changes.submitter_email + ">";

                if(_changes) {
                    var fileDetails = {
                        "jira_issue" : _changes.jira_issue,
                        "category" : _changes.file_category,
                        "filename" : filename,
                        "expiry" : _changes.file_expiry,
                       
                        "url" : _changes.file_url,
                        "comments" : _changes.file_comments,
                        "file_size" : fileToUpload.size,
                        "file_dimensions" : imgDimensions,
                        "fileToUpload" : fileToUpload,
                        "fileType" : fileToUpload.type,
                        "imageBase64" : imgBase64
                    };
                    json.push(fileDetails); 
                }

                console.log(fileDetails);
                console.log(fileToUpload.type);

                $.postJSON( '{{ addFile}}', fileDetails)
                .done(function() {
                     $('#uploadModal').modal('hide');
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    console.log ("error:" + errorThrown.message);
                    console.log ("error:" + textStatus);
                    console.log ("error:" + jqXHR);
                });
            });

            $('#deleteModal').on('submit', 'form', function (e) {
                var fileInfo = getInputs(this);
                var json = [];                
                
                if(fileInfo) {
                    var fileDetails = {"filename" : fileInfo.file_name, "comment" : fileInfo.file_comments};
                    json.push(fileDetails);
                }
                
                $.postJSON( '{{ deleteFile}}', fileDetails)
                .fail(function (jqXHR, textStatus, errorThrown) {
                    console.log ("error:" + errorThrown.message);
                    console.log ("error:" + textStatus);
                    console.log ("error:" + jqXHR);
                });         
            });

   });
       
    </script>
    
    {{ source('tmpl.html', ignore_missing = true) }}
{% endblock %}